package fr.keyce.todo_list.controllers;

import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import fr.keyce.todo_list.model.Priority;
import fr.keyce.todo_list.model.Todo;
import fr.keyce.todo_list.services.TodoService;
import fr.keyce.todo_list.services.Impl.TodoServiceImpl;

@WebServlet(name = "TodoListServlet", urlPatterns = "/TodoList")
public class TodoListServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	
	private TodoService todoService = TodoServiceImpl.getInstance();
	private final String REDIRECT_URL = "http://localhost:8080/todo-list/TodoList";
	private final String PATH_REQUEST_DISPATCHER = "/jsp/todoList.jsp";
       
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {	
		request.setAttribute("getAllTodo", this.todoService.findAll());
		request.getRequestDispatcher(PATH_REQUEST_DISPATCHER).forward(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		switch (request.getParameter("action")) {
			case "Supprimer": {
				todoService.delete(Integer.parseInt(request.getParameter("id")));
				response.sendRedirect(REDIRECT_URL);
				break;
			}
			case "Modifier":{
				Todo update = new Todo();
				try {
					update.setId(Integer.parseInt(request.getParameter("id")));
					update.setName(request.getParameter("name"));
					update.setDescription(request.getParameter("description"));
					update.setCreationDate(new SimpleDateFormat("dd/MM/yyyy").parse(request.getParameter("creationDate")));
					update.setDeadLine(new SimpleDateFormat("dd/MM/yyyy").parse(request.getParameter("deadLine")));
					switch (request.getParameter("priority")) {
						case "LOW": {
							update.setPriority(Priority.LOW);			
						}
						case "NORMAL": {
							update.setPriority(Priority.NORMAL);
						}
						case "HIGH": {
							update.setPriority(Priority.HIGH);
						}
					}
				} catch (ParseException e) {
					e.printStackTrace();
				}

				todoService.update(update);
				response.sendRedirect(REDIRECT_URL);
				break;
			}
		}
	}
}
